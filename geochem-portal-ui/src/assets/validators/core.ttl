@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix gsq-shapes: <https://linked.data.gov.au/def/geochem/gsq/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rc: <http://def.isotc211.org/iso19115/-1/2018/CitationAndResponsiblePartyInformation/code/CI_RoleCode/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sdo: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://linked.data.gov.au/def/geochem/gsq> a owl:Ontology ;
    owl:versionIRI gsq-shapes:1.0.0 ;
    owl:versionInfo """1.0.0: NJC: JSONSchema validator added and partially aligned with SHACL validator

0.0.2: NJC: included tests for two specific vocab values; required sosa:observedProperty on Observation due to OC buildout""" ;
    prov:qualifiedAttribution [ a prov:Attribution ;
            prov:agent <https://orcid.org/0000-0002-8742-7730> ;
            prov:hadRole rc:author ],
        [ a prov:Attribution ;
            prov:agent <https://linked.data.gov.au/org/gsq> ;
            prov:hadRole rc:publisher ] ;
    sdo:dateCreated "2023-09-25"^^xsd:date ;
    sdo:dateModified "2023-10-08"^^xsd:date ;
    sdo:description "A SHACL validator for the GSQ Geochemistry Data Exchange Model implementing the constraints of the GSP Profile" ;
    sdo:name "Validator for GSQ Profile of the GSQ Geochemistry Data Exchange Model" ;
    sdo:version "1.0.0" .

gsq-shapes:AttributionMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "An Attribution must have exactly one prov:agent predicate, indicating an IRI" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path prov:agent ],
        [ sh:maxCount 1 ;
            sh:message "An Attribution must have exactly one prov:hadRole predicate, indicating an IRI" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path prov:hadRole ] ;
    sh:targetClass prov:Attribution ;
    sdo:name "Attribution's Mandatory Predicates" .

gsq-shapes:DatasetMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "A Dataset must have exactly one sdo:dateCreated predicate, indicating a date or date time value" ;
            sh:minCount 1 ;
            sh:or ( [ sh:datatype xsd:date ] [ sh:datatype xsd:dateTime ] ) ;
            sh:path sdo:dateCreated ],
        [ sh:maxCount 1 ;
            sh:message "A Dataset must have exactly one sdo:dateModified predicate, indicating a date or date time value" ;
            sh:minCount 1 ;
            sh:or ( [ sh:datatype xsd:date ] [ sh:datatype xsd:dateTime ] ) ;
            sh:path sdo:dateModified ],
        [ sh:message "A Dataset does not have to have sdo:keywords predicates but, if it does, they must indicate IRIs" ;
            sh:nodeKind sh:IRI ;
            sh:path sdo:keywords ],
        [ sh:class prov:Attribution ;
            sh:message "A Dataset must have at least one prov:qualifiedAttribution predicate, indicating a prov:agent and a prov:hadRole value" ;
            sh:minCount 1 ;
            sh:path prov:qualifiedAttribution ],
        [ sh:maxCount 1 ;
            sh:message "A Dataset must have exactly one sdo:name predicate, indicating a text value" ;
            sh:minCount 1 ;
            sh:or ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] ) ;
            sh:path sdo:name ],
        [ sh:maxCount 1 ;
            sh:message "A Dataset must have exactly one sdo:description predicate, indicating a text value" ;
            sh:minCount 1 ;
            sh:or ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] ) ;
            sh:path sdo:description ] ;
    sh:targetClass sdo:Dataset ;
    sdo:name "Dataset's Mandatory Predicates" .

gsq-shapes:GeometryMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:datatype geo:wktLiteral ;
            sh:maxCount 1 ;
            sh:message "A Geometry must have exactly one least geo:asWKT predicate, indicating a geo:wktLiteral object" ;
            sh:minCount 1 ;
            sh:path geo:asWKT ] ;
    sh:targetClass geo:Geometry ;
    sdo:name "Geometry's Mandatory Predicates" .

gsq-shapes:ObservationCollectionMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:class sosa:Observation ;
            sh:message "An ObservationCollection must have at least one sosa:hasMember predicate, indicating an Observation" ;
            sh:minCount 1 ;
            sh:path sosa:hasMember ] ;
    sh:targetClass sosa:ObservationCollection ;
    sdo:name "ObservationCollection's Mandatory Predicates" .

gsq-shapes:ObservationMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "An Observation must have exactly one sosa:usedProcedure predicate, indicating an IRI of a Concept in a vocabulary" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path sosa:usedProcedure ],
        [ sh:maxCount 1 ;
            sh:message "An Observation may have exactly one sosa:madeBySensor predicate, indicating an IRI of a Concept in a vocabulary" ;
            sh:nodeKind sh:IRI ;
            sh:path sosa:madeBySensor ],
        [ sh:maxCount 1 ;
            sh:message "An Observation must have exactly one sosa:observedProperty predicate, indicating an IRI of a Concept in a vocabulary. This predicate may be obtained from a containing Observation Collection" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path sosa:observedProperty ],
        [ sh:maxCount 1 ;
            sh:message "An Observation must have exactly one sosa:hasFeatureOfInterest predicate, indicating an IRI of a Sample or a Feature Of Interest" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path sosa:hasFeatureOfInterest ],
        [ sh:maxCount 1 ;
            sh:message "An Observation may have a maximum of one sosa:resultTime predicate, indicating a date or date time value" ;
            sh:or ( [ sh:datatype xsd:date ] [ sh:datatype xsd:dateTime ] ) ;
            sh:path sosa:resultTime ],
        [ sh:message "An Observation must have at least one sosa:hasResult predicate, indicating an IRI of a Result" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path sosa:hasResult ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:message "An Observation may have one sdo:marginOfError predicate, indicating an floating point number" ;
            sh:path sdo:marginOfError ] ;
    sh:targetClass sosa:Observation ;
    sdo:name "Observation's Mandatory Predicates" .

gsq-shapes:ResultMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "An Result must have exactly one sdo:value predicate, indicating any kind of value" ;
            sh:minCount 1 ;
            sh:path sdo:value ],
        [ sh:maxCount 1 ;
            sh:message "An Result must have exactly one sdo:unitCode predicate, indicating an IRI of a Concept in a vocabulary" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:path sdo:unitCode ] ;
    sh:targetClass sosa:Result ;
    sdo:name "Result's Mandatory Predicates" .

gsq-shapes:SampleMandatoryPredicates a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "An Sample may have one sosa:isSampleOf predicate, indicating an IRI of another Sample or a Feature Of Interest" ;
            sh:nodeKind sh:IRI ;
            sh:path sosa:isSampleOf ] ;
    sh:targetClass sosa:Sample ;
    sdo:name "Sample's Mandatory Predicates" .

gsq-shapes:oc-to-o a sh:NodeShape ;
    sh:order 1 ;
    sh:rule [ a sh:SPARQLRule ;
            sh:construct """
            CONSTRUCT {
                ?o ?obs_pred ?obj
            }
            WHERE {
                $this sosa:hasMember ?o .
                {
                    SELECT $this ?obs_pred ?obj
                    WHERE {
                        VALUES ?obs_pred {
                            sdo:marginOfError
                            sosa:hasFeatureOfInterest
                            sosa:madeBySensor
                            sosa:observedProperty
                            sosa:resultTime
                            sosa:usedProcedure
                        }

                        {
                            $this
                                a sosa:ObservationCollection ;
                                ?obs_pred ?obj ;
                            .
                        }
                    }
                }
            }
			""" ;
            sh:prefixes sosa:,
                sdo: ] ;
    sh:targetClass sosa:ObservationCollection .

